name: "Build IPA (Test Production)"

on:
  push:
    branches:
      - test-production

jobs:
  build_with_signing:
    env:
     VITE_BASE_API_URL: ${{ vars.VITE_BASE_TEST_PRODUCTION_API_URL }}
     VITE_API_PREFIX: ${{ vars.VITE_API_PREFIX }}
     VITE_BASE_URL: ${{ vars.VITE_BASE_URL }}    
    runs-on: macos-latest
    steps:
      # this was more debug as was curious what came pre-installed
      # GitHub shares this online, e.g. https://github.com/actions/runner-images/blob/macOS-12/20230224.1/images/macos/macos-12-Readme.md
      - name: Check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Ionic
        run: yarn global add @ionic/cli

      - name: Install app dependencies
        run: yarn install

      - name: Copy IOS
        run: ionic capacitor sync

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.P12_CERT }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MOBILE_PROVISION }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          EXPORT_CERTIFICATE_BASE64: ${{ secrets.EXPORT_CERT }}
          EXPORT_CERTIFICATE_PASSWORD: ${{ secrets.EXPORT_CERT_PASSWORD }}
          EXPORT_PROVISION_PROFILE_BASE64: ${{ secrets.EXPORT_PROFILE }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          EXPORT_CERTIFICATE_PATH=$RUNNER_TEMP/export_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          EXPORT_PP_PATH=$RUNNER_TEMP/export_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          echo -n "$EXPORT_CERTIFICATE_BASE64" | base64 --decode -o $EXPORT_CERTIFICATE_PATH
          echo -n "$EXPORT_PROVISION_PROFILE_BASE64" | base64 --decode -o $EXPORT_PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import $EXPORT_CERTIFICATE_PATH -P "$EXPORT_CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles 
          cp $EXPORT_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles 

          cd ios/App
          pod install
          cd ..

      - uses: yanamura/ios-bump-version@v1
        with:
          project-path: ios/App
          # version number
          # ex. 3.2.0
          # If version is not set, the version does not be changed.
          version: ''
      
          # build number
          # ex. 10
          # If build-number is not set, auto-increment build number.
          build-number: ''

      - name: Build archive
        run: |
          xcodebuild -scheme "App" \
          -workspace ios/App/App.xcworkspace \
          -allowProvisioningUpdates \
          -archivePath $RUNNER_TEMP/app.xcarchive \
          -sdk iphoneos \
          -configuration Release \
          -destination generic/platform=iOS \
          clean archive          

      - name: Export IPA
        run: |
          xcodebuild -exportOptionsPlist ios/App/ExportOptions.plist -exportArchive -archivePath $RUNNER_TEMP/app.xcarchive -exportPath $RUNNER_TEMP/build          

      - name: Upload Application
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: ${{ runner.temp }}/build/App.ipa

      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with: 
          app-path: ${{ runner.temp }}/build/App.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
